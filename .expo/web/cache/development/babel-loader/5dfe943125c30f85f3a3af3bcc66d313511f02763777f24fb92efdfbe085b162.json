{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../elements/style\";\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _useState = useState(SQLite.openDatabase('smarthome.db')),\n  _useState2 = _slicedToArray(_useState, 2),\n  db = _useState2[0],\n  setDb = _useState2[1];\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    msg = _useState8[0],\n    setMsg = _useState8[1];\n  var handleLogin = function handleLogin(username, password) {\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM users WHERE username = ?;', [username], function (_, result) {\n        if (result.rows.length > 0) {\n          setMsg('Login succesfully');\n          navigation.navigate('Login');\n        } else {\n          setMsg('Please register');\n        }\n      });\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container_login,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Login\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Username\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: function onPress() {\n        return handleLogin(username, password);\n      },\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"LOGIN\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: _jsx(Text, {\n        style: styles.signupText,\n        children: \"Don't have an account? Sign up now\"\n      })\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","styles","SQLite","jsx","_jsx","jsxs","_jsxs","_useState","openDatabase","_useState2","_slicedToArray","db","setDb","LoginScreen","_ref","navigation","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","_useState7","_useState8","msg","setMsg","handleLogin","transaction","tx","executeSql","_","result","rows","length","navigate","style","container_login","children","logo","inputView","inputText","placeholder","placeholderTextColor","onChangeText","text","value","secureTextEntry","loginBtn","onPress","loginText","signupText"],"sources":["/home/son/Downloads/Mobile app/FirstReactNative/src/screens/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport styles from '../../elements/style';\nimport * as SQLite from 'expo-sqlite'\n\ninterface ILoginProps {\n    navigation: any;\n}\n\nconst [db, setDb] = useState(SQLite.openDatabase('smarthome.db'));\n\n\nconst LoginScreen: React.FC<ILoginProps> = ({ navigation }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [msg, setMsg] = useState('');\n    const handleLogin = (username: string, password: string) => {\n        db.transaction(tx => {\n            tx.executeSql(\n                'SELECT * FROM users WHERE username = ?;',\n                [username],\n                (_, result) => {\n                    if (result.rows.length > 0) {\n                        setMsg('Login succesfully');\n                        navigation.navigate('Login');\n                    } else {\n                        setMsg('Please register');\n                    }\n                },\n\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container_login}>\n            <Text style={styles.logo}>Login</Text>\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Username\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={text => setUsername(text)}\n                    value={username}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Password\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={text => setPassword(text)}\n                    value={password}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.loginBtn} onPress={() => handleLogin(username, password)}>\n                <Text style={styles.loginText}>LOGIN</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n                <Text style={styles.signupText}>Don't have an account? Sign up now</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\n\n\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}