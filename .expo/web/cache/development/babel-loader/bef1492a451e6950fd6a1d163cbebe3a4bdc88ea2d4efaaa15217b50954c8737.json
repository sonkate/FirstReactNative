{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../elements/style\";\nimport * as SQLite from 'expo-sqlite';\nimport { useForm } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var db = SQLite.openDatabase('smarthome.db');\n  var _useForm = useForm(),\n    register = _useForm.register,\n    handleSubmit = _useForm.handleSubmit;\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT, password TEXT);', []);\n    });\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM users', [], function (_, resultSet) {\n        console.log(resultSet.rows._array);\n      });\n    });\n  }, [db]);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    msg = _useState2[0],\n    setMsg = _useState2[1];\n  var addUser = function addUser(username, password) {\n    db.transaction(function (tx) {\n      tx.executeSql('INSERT INTO users (username, password) VALUES (?, ?)', [username, password]);\n    });\n  };\n  var handleRegister = function handleRegister(username, password, cf_password) {\n    if (password !== cf_password) {\n      setMsg('Password did not match');\n      console.log(msg);\n      return;\n    }\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM users WHERE username = ?;', [username], function (_, result) {\n        if (result.rows.length > 0) {\n          setMsg('User exists');\n        } else {\n          addUser(username, password);\n          setMsg('Create user successfully');\n        }\n      });\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container_login,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Register\"\n    }), _jsx(Text, {\n      style: styles.text_mid,\n      children: msg ? msg : 'No thing'\n    }), _jsxs(\"form\", {\n      style: styles.inputView,\n      action: \"\",\n      onSubmit: handleSubmit(function (data) {\n        console.log(data);\n      }),\n      children: [_jsx(TouchableOpacity, {\n        style: styles.inputView,\n        children: _jsx(TextInput, _objectSpread(_objectSpread({\n          style: styles.inputText\n        }, register('username')), {}, {\n          placeholder: \"Username\",\n          placeholderTextColor: \"#003f5c\"\n        }))\n      }), _jsx(TouchableOpacity, {\n        style: styles.inputView,\n        children: _jsx(TextInput, _objectSpread(_objectSpread({\n          style: styles.inputText\n        }, register('password')), {}, {\n          placeholder: \"Password\",\n          placeholderTextColor: \"#003f5c\"\n        }))\n      }), _jsx(TouchableOpacity, {\n        style: styles.inputView,\n        children: _jsx(TextInput, _objectSpread(_objectSpread({\n          style: styles.inputText\n        }, register('confirm_password')), {}, {\n          placeholder: \"Confirm password\",\n          placeholderTextColor: \"#003f5c\"\n        }))\n      }), _jsx(\"input\", {\n        style: styles.loginBtn,\n        type: \"submit\"\n      })]\n    })]\n  });\n};\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","styles","SQLite","useForm","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","db","openDatabase","_useForm","register","handleSubmit","transaction","tx","executeSql","_","resultSet","console","log","rows","_array","_useState","_useState2","_slicedToArray","msg","setMsg","addUser","username","password","handleRegister","cf_password","result","length","style","container_login","children","logo","text_mid","inputView","action","onSubmit","data","_objectSpread","inputText","placeholder","placeholderTextColor","loginBtn","type"],"sources":["/home/son/Downloads/Mobile app/FirstReactNative/src/screens/Register.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport styles from '../../elements/style';\ninterface ILoginProps {\n    navigation: any;\n}\n\nimport * as SQLite from 'expo-sqlite';\nimport * as Crypto from 'expo-crypto';\nimport { useForm } from 'react-hook-form';\nconst RegisterScreen: React.FC<ILoginProps> = ({ navigation }) => {\n    const db = SQLite.openDatabase('smarthome.db');\n    const { register, handleSubmit } = useForm();\n    useEffect(() => {\n        db.transaction(tx => {\n            tx.executeSql(\n                'CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT, password TEXT);',\n                [],\n            );\n        });\n\n        db.transaction(tx => {\n            tx.executeSql(\n                'SELECT * FROM users',\n                [],\n\n                (_, resultSet) => {\n                    console.log(resultSet.rows._array);\n                }\n            );\n        });\n    }, [db]);\n\n    const [msg, setMsg] = useState('');\n\n\n    const addUser = (username: string, password: string) => {\n        db.transaction((tx) => {\n            tx.executeSql(\n                'INSERT INTO users (username, password) VALUES (?, ?)',\n                [username, password],\n            );\n        });\n    }\n\n    const handleRegister = (username: string, password: string, cf_password: string) => {\n        // Handle login logic here\n        if (password !== cf_password) {\n            setMsg('Password did not match');\n            console.log(msg);\n            return;\n        }\n\n        db.transaction(tx => {\n            tx.executeSql(\n                'SELECT * FROM users WHERE username = ?;',\n                [username],\n                (_, result) => {\n                    if (result.rows.length > 0) {\n                        setMsg('User exists');\n                    } else {\n                        addUser(username, password);\n                        setMsg('Create user successfully');\n                    }\n                },\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container_login}>\n            <Text style={styles.logo}>Register</Text>\n            <Text style={styles.text_mid}>{msg ? msg : 'No thing'}</Text>\n            <form style={styles.inputView} action=\"\" onSubmit={handleSubmit((data) => {\n                console.log(data);\n            })}>\n                <TouchableOpacity style={styles.inputView}>\n                    <TextInput\n                        style={styles.inputText}\n                        {...register('username')}\n                        placeholder='Username'\n                        placeholderTextColor=\"#003f5c\"\n                    />\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.inputView}>\n                    <TextInput\n                        style={styles.inputText}\n                        {...register('password')}\n                        placeholder='Password'\n                        placeholderTextColor=\"#003f5c\"\n                    />\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.inputView}>\n                    <TextInput\n                        style={styles.inputText}\n                        {...register('confirm_password')}\n                        placeholder='Confirm password'\n                        placeholderTextColor=\"#003f5c\"\n                    />\n                </TouchableOpacity>\n                <input style={styles.loginBtn} type=\"submit\" />\n            </form>\n        </View>\n    );\n};\n\n\n\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}