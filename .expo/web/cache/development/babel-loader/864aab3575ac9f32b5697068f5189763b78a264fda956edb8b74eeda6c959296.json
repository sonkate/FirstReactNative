{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../elements/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Login\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Username\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"LOGIN\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: _jsx(Text, {\n        style: styles.signupText,\n        children: \"Don't have an account? Sign up now\"\n      })\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","styles","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","style","container","children","logo","inputView","inputText","placeholder","placeholderTextColor","onChangeText","text","value","secureTextEntry","loginBtn","onPress","loginText","navigate","signupText"],"sources":["/home/son/Downloads/Mobile app/FirstReactNative/src/screens/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport styles from '../../elements/style';\ninterface ILoginProps {\n    navigation: any;\n}\n\nconst Login: React.FC<ILoginProps> = ({ navigation }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = () => {\n        // Handle login logic here\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.logo}>Login</Text>\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Username\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={text => setUsername(text)}\n                    value={username}\n                />\n            </View>\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Password\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={text => setPassword(text)}\n                    value={password}\n                />\n            </View>\n            <TouchableOpacity style={styles.loginBtn} onPress={handleLogin}>\n                <Text style={styles.loginText}>LOGIN</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n                <Text style={styles.signupText}>Don't have an account? Sign up now</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\n\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAExC,OAAOC,MAAM;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAK1C,IAAMC,KAA4B,GAAG,SAA/BA,KAA4BA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAAA,IAAAC,SAAA,GACdb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACIlB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS,CAE1B,CAAC;EAED,OACIb,KAAA,CAACR,IAAI;IAACsB,KAAK,EAAElB,MAAM,CAACmB,SAAU;IAAAC,QAAA,GAC1BlB,IAAA,CAACL,IAAI;MAACqB,KAAK,EAAElB,MAAM,CAACqB,IAAK;MAAAD,QAAA,EAAC;IAAK,EAAO,EACtClB,IAAA,CAACN,IAAI;MAACsB,KAAK,EAAElB,MAAM,CAACsB,SAAU;MAAAF,QAAA,EAC1BlB,IAAA,CAACJ,SAAS;QACNoB,KAAK,EAAElB,MAAM,CAACuB,SAAU;QACxBC,WAAW,EAAC,UAAU;QACtBC,oBAAoB,EAAC,SAAS;QAC9BC,YAAY,EAAE,SAAAA,aAAAC,IAAI;UAAA,OAAIf,WAAW,CAACe,IAAI,CAAC;QAAA,CAAC;QACxCC,KAAK,EAAEjB;MAAS;IAClB,EACC,EACPT,IAAA,CAACN,IAAI;MAACsB,KAAK,EAAElB,MAAM,CAACsB,SAAU;MAAAF,QAAA,EAC1BlB,IAAA,CAACJ,SAAS;QACNoB,KAAK,EAAElB,MAAM,CAACuB,SAAU;QACxBC,WAAW,EAAC,UAAU;QACtBC,oBAAoB,EAAC,SAAS;QAC9BI,eAAe,EAAE,IAAK;QACtBH,YAAY,EAAE,SAAAA,aAAAC,IAAI;UAAA,OAAIX,WAAW,CAACW,IAAI,CAAC;QAAA,CAAC;QACxCC,KAAK,EAAEb;MAAS;IAClB,EACC,EACPb,IAAA,CAACH,gBAAgB;MAACmB,KAAK,EAAElB,MAAM,CAAC8B,QAAS;MAACC,OAAO,EAAEd,WAAY;MAAAG,QAAA,EAC3DlB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAElB,MAAM,CAACgC,SAAU;QAAAZ,QAAA,EAAC;MAAK;IAAO,EAC5B,EACnBlB,IAAA,CAACH,gBAAgB;MAACgC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMxB,UAAU,CAAC0B,QAAQ,CAAC,UAAU,CAAC;MAAA,CAAC;MAAAb,QAAA,EAC7DlB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAElB,MAAM,CAACkC,UAAW;QAAAd,QAAA,EAAC;MAAkC;IAAO,EAC1D;EAAA,EAChB;AAEf,CAAC;AAID,eAAef,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}