{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../elements/style\";\nimport { useForm } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirm_password = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useForm = useForm(),\n    register = _useForm.register,\n    handleSubmit = _useForm.handleSubmit;\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    msg = _useState8[0],\n    setMsg = _useState8[1];\n  var handleRegister = function handleRegister(username, password, cf_password) {\n    if (password !== cf_password) {\n      setMsg('Password did not match');\n      return;\n    } else {}\n  };\n  return _jsxs(View, {\n    style: styles.container_login,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Register\"\n    }), _jsx(Text, {\n      style: styles.text_mid,\n      children: msg ? msg : 'No thing'\n    }), _jsx(TextInput, {\n      style: styles.inputView,\n      placeholder: \"Username\",\n      placeholderTextColor: \"#003f5c\",\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username\n    }), _jsx(TextInput, {\n      style: styles.inputView,\n      placeholder: \"Password\",\n      placeholderTextColor: \"#003f5c\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TextInput, {\n      style: styles.inputView,\n      placeholder: \"Confirm Password\",\n      placeholderTextColor: \"#003f5c\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      },\n      value: confirm_password\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: function onPress() {\n        return handleRegister(username, password, confirm_password);\n      },\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"REGISTER\"\n      })\n    })]\n  });\n};\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","styles","useForm","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirm_password","setConfirmPassword","_useForm","register","handleSubmit","_useState7","_useState8","msg","setMsg","handleRegister","cf_password","style","container_login","children","logo","text_mid","inputView","placeholder","placeholderTextColor","onChangeText","text","value","secureTextEntry","loginBtn","onPress","loginText"],"sources":["D:/BKU/Đồ án đa ngành/FirstReactNative/src/screens/Register.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport styles from '../../elements/style';\r\ninterface ILoginProps {\r\n    navigation: any;\r\n}\r\n\r\nimport * as Crypto from 'expo-crypto';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from 'react-native-elements';\r\nconst RegisterScreen: React.FC<ILoginProps> = ({ navigation }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirm_password, setConfirmPassword] = useState('');\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const [msg, setMsg] = useState('');\r\n\r\n\r\n\r\n    const handleRegister = (username: string, password: string, cf_password: string) => {\r\n        // Handle login logic here\r\n        if (password !== cf_password) {\r\n            setMsg('Password did not match');\r\n            return;\r\n        }\r\n        else {\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container_login}>\r\n            <Text style={styles.logo}>Register</Text>\r\n            <Text style={styles.text_mid}>{msg ? msg : 'No thing'}</Text>\r\n\r\n            <TextInput\r\n                style={styles.inputView}\r\n                placeholder=\"Username\"\r\n                placeholderTextColor=\"#003f5c\"\r\n                onChangeText={text => setUsername(text)}\r\n                value={username}\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.inputView}\r\n                placeholder=\"Password\"\r\n                placeholderTextColor=\"#003f5c\"\r\n                secureTextEntry={true}\r\n                onChangeText={text => setPassword(text)}\r\n                value={password}\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.inputView}\r\n                placeholder=\"Confirm Password\"\r\n                placeholderTextColor=\"#003f5c\"\r\n                secureTextEntry={true}\r\n                onChangeText={text => setConfirmPassword(text)}\r\n                value={confirm_password}\r\n            />\r\n\r\n            <TouchableOpacity style={styles.loginBtn} onPress={() => handleRegister(username, password, confirm_password)}>\r\n                <Text style={styles.loginText}>REGISTER</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}