{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from \"react-native-elements\";\nimport styles from \"../../elements/style\";\nimport { set_value } from \"./SettingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AIO_KEY = 'aio_wHPt23RGoOQoK8MD32FJcfhbXWiS';\nvar AIO_USERNAME = 'HarryHaha';\nvar FEED_ID_1 = 'auto1';\nvar FEED_ID_2 = 'auto2';\nvar FEED_ID_3 = 'auto3';\nvar url_auto_1 = \"https://io.adafruit.com/api/v2/\" + AIO_USERNAME + \"/feeds/\" + FEED_ID_1 + \"/data\";\nvar url_auto_2 = \"https://io.adafruit.com/api/v2/\" + AIO_USERNAME + \"/feeds/\" + FEED_ID_2 + \"/data\";\nvar url_auto_3 = \"https://io.adafruit.com/api/v2/\" + AIO_USERNAME + \"/feeds/\" + FEED_ID_3 + \"/data\";\nvar isEnabled1 = false;\nvar toggleSwitch1 = function toggleSwitch1() {\n  set_value(\"\" + (!isEnabled1 ? \"1\" : \"0\"), url_auto_1);\n  isEnabled1 = !isEnabled1;\n};\nvar isEnabled2 = false;\nvar toggleSwitch2 = function toggleSwitch2() {\n  set_value(\"\" + (!isEnabled2 ? \"1\" : \"0\"), url_auto_2);\n  isEnabled2 = !isEnabled2;\n};\nvar isEnabled3 = false;\nvar toggleSwitch3 = function toggleSwitch3() {\n  set_value(\"\" + (!isEnabled3 ? \"1\" : \"0\"), url_auto_3);\n  isEnabled3 = !isEnabled3;\n};\nvar newBackgroundColor = 'red';\nvar AutoScreen = function AutoScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPressed = _useState2[0],\n    setIsPressed = _useState2[1];\n  var handleOnPress = function handleOnPress() {\n    if (isPressed) {\n      newBackgroundColor = 'black';\n      setIsPressed(false);\n    } else {\n      newBackgroundColor = 'white';\n      setIsPressed(true);\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      backgroundColor: \"rgb(253,201,0)\",\n      backgroundImageStyle: {},\n      barStyle: \"default\",\n      centerComponent: {\n        text: \"Auto\",\n        style: {\n          color: \"#fff\",\n          fontSize: 20,\n          paddingBottom: 5\n        }\n      },\n      centerContainerStyle: {},\n      leftContainerStyle: {},\n      placement: \"center\",\n      rightContainerStyle: {},\n      statusBarProps: {}\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Recommends\"\n      }), _jsx(TouchableOpacity, {\n        onPress: handleOnPress,\n        style: [styles.buttonStyle, {\n          backgroundColor: newBackgroundColor\n        }],\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Press Me\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.buttonStyle, {\n          backgroundColor: isEnabled1 ? \"blue\" : \"red\"\n        }],\n        onPress: function onPress() {\n          return toggleSwitch1();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Turn on the light when it's dark\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonStyle,\n        onPress: function onPress() {\n          return toggleSwitch2();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Turn on the fan when the temperature is over 20 degree\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonStyle,\n        onPress: function onPress() {\n          return toggleSwitch3();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Turn on the light when there are peole in the room\"\n        })\n      })]\n    })]\n  });\n};\nexport default AutoScreen;","map":{"version":3,"names":["React","useState","Text","View","TouchableOpacity","Header","styles","set_value","jsx","_jsx","jsxs","_jsxs","AIO_KEY","AIO_USERNAME","FEED_ID_1","FEED_ID_2","FEED_ID_3","url_auto_1","url_auto_2","url_auto_3","isEnabled1","toggleSwitch1","isEnabled2","toggleSwitch2","isEnabled3","toggleSwitch3","newBackgroundColor","AutoScreen","_useState","_useState2","_slicedToArray","isPressed","setIsPressed","handleOnPress","children","backgroundColor","backgroundImageStyle","barStyle","centerComponent","text","style","color","fontSize","paddingBottom","centerContainerStyle","leftContainerStyle","placement","rightContainerStyle","statusBarProps","container","title","onPress","buttonStyle"],"sources":["/home/son/Downloads/React native app/FirstReactNative/src/screens/AutoScreen.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport { Text, View, Alert, TouchableOpacity } from 'react-native'\nimport { Button, Header } from \"react-native-elements\";\nimport styles from '../../elements/style';\nimport { set_value } from './SettingScreen';\n\n\nconst AIO_KEY = 'aio_wHPt23RGoOQoK8MD32FJcfhbXWiS';\nconst AIO_USERNAME = 'HarryHaha';\n\nconst FEED_ID_1 = 'auto1';\nconst FEED_ID_2 = 'auto2';\nconst FEED_ID_3 = 'auto3';\n\nconst url_auto_1 = `https://io.adafruit.com/api/v2/${AIO_USERNAME}/feeds/${FEED_ID_1}/data`;\nconst url_auto_2 = `https://io.adafruit.com/api/v2/${AIO_USERNAME}/feeds/${FEED_ID_2}/data`;\nconst url_auto_3= `https://io.adafruit.com/api/v2/${AIO_USERNAME}/feeds/${FEED_ID_3}/data`;\n\n\n\n\n\n\nlet isEnabled1 = false;\n\nconst toggleSwitch1 = () => {   \n    set_value(`${!isEnabled1 ? \"1\" : \"0\"}`,url_auto_1)\n    isEnabled1 = !isEnabled1;\n}\nlet isEnabled2 = false;\n\nconst toggleSwitch2 = () => {\n    set_value(`${!isEnabled2 ? \"1\" : \"0\"}`,url_auto_2)\n    isEnabled2 = !isEnabled2;\n}\nlet isEnabled3 = false;\n\nconst toggleSwitch3 = () => {\n    set_value(`${!isEnabled3 ? \"1\" : \"0\"}`,url_auto_3)\n    isEnabled3 = !isEnabled3;\n}\nlet newBackgroundColor = 'red';\nconst AutoScreen: React.FC =() =>{\n    const [isPressed, setIsPressed] = useState(false);\n    const handleOnPress = () => {\n        if (isPressed) {\n            newBackgroundColor = 'black';\n            setIsPressed(false);\n        } else {\n            newBackgroundColor = 'white';\n            setIsPressed(true);\n        }\n    }\n\n    return(\n        <View>\n            <Header\n            backgroundColor=\"rgb(253,201,0)\"\n            backgroundImageStyle={{}}\n            barStyle=\"default\"\n            centerComponent={{\n                text: \"Auto\",\n                style: {color: \"#fff\",fontSize: 20,paddingBottom:5 }\n            }}\n            centerContainerStyle={{}}\n            // leftComponent={{ icon: \"menu\", color: \"#fff\" }}\n            leftContainerStyle={{}}\n            placement=\"center\"\n            // rightComponent={{ icon: \"home\", color: \"#fff\" }}\n            rightContainerStyle={{}}\n            statusBarProps={{}}\n            />\n            <View style = {styles.container}>\n                <Text style={styles.title}>Recommends</Text>\n\n                <TouchableOpacity \n                    onPress={handleOnPress}\n                    style={[styles.buttonStyle, {backgroundColor: newBackgroundColor}]}\n                    >\n                    <Text style={styles.text}>Press Me</Text>\n                    </TouchableOpacity>\n                    \n                <TouchableOpacity style={[styles.buttonStyle, {backgroundColor: isEnabled1 ? \"blue\" : \"red\"}]} onPress={() => toggleSwitch1()}>\n                  <Text style={styles.text}>Turn on the light when it's dark</Text>\n                </TouchableOpacity>\n\n                \n                <TouchableOpacity style={styles.buttonStyle} onPress={() => toggleSwitch2()}>\n                    <Text style={styles.text}>Turn on the fan when the temperature is over 20 degree</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.buttonStyle} onPress={() => toggleSwitch3()}>\n                    <Text style={styles.text}>Turn on the light when there are peole in the room</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\n\nexport default AutoScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}