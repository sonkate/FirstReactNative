{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../elements/style\";\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('smarthome.db');\nuseEffect(function () {\n  db.transaction(function (tx) {\n    tx.executeSql('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT, password TEXT);', []);\n  });\n}, [db]);\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    msg = _useState6[0],\n    setMsg = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    cf_password = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var handleRegister = function handleRegister() {\n    db.transaction(function (tx) {\n      tx.executeSql('SELECT * FROM users WHERE username = ?;', ['abc'], function (_, result) {\n        if (result.rows.length > 0) {\n          console.log('Tài khoản đã tồn tại trong database.');\n        } else {\n          console.log('Tài khoản không tồn tại trong database.');\n        }\n      });\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container_login,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Register\"\n    }), _jsx(Text, {\n      style: styles.text_mid,\n      children: msg\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Username\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Confirm Password\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        },\n        value: cf_password\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"REGISTER\"\n      })\n    })]\n  });\n};\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","styles","SQLite","jsx","_jsx","jsxs","_jsxs","db","openDatabase","transaction","tx","executeSql","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","msg","setMsg","_useState7","_useState8","cf_password","setConfirmPassword","handleRegister","_","result","rows","length","console","log","style","container_login","children","logo","text_mid","inputView","inputText","placeholder","placeholderTextColor","onChangeText","text","value","secureTextEntry","loginBtn","onPress","loginText"],"sources":["/home/son/Downloads/Mobile app/FirstReactNative/src/screens/Register.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport styles from '../../elements/style';\ninterface ILoginProps {\n    navigation: any;\n}\n\nimport * as SQLite from 'expo-sqlite';\nimport * as Crypto from 'expo-crypto';\n\nconst db = SQLite.openDatabase('smarthome.db');\n\nuseEffect(() => {\n    db.transaction(tx => {\n        tx.executeSql(\n            'CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT, password TEXT);',\n            [],\n        );\n    });\n}, [db]);\n\nconst RegisterScreen: React.FC<ILoginProps> = ({ navigation }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [msg, setMsg] = useState('');\n\n    const [cf_password, setConfirmPassword] = useState('');\n\n    const handleRegister = () => {\n        // Handle login logic here\n        db.transaction(tx => {\n            tx.executeSql(\n                'SELECT * FROM users WHERE username = ?;',\n                ['abc'],\n                (_, result) => {\n                    if (result.rows.length > 0) {\n                        console.log('Tài khoản đã tồn tại trong database.');\n                    } else {\n                        console.log('Tài khoản không tồn tại trong database.');\n                    }\n                },\n            );\n        });\n    };\n\n    return (\n        <View style={styles.container_login}>\n            <Text style={styles.logo}>Register</Text>\n            <Text style={styles.text_mid}>{msg}</Text>\n\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Username\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={text => setUsername(text)}\n                    value={username}\n                />\n            </TouchableOpacity>\n\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Password\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={text => setPassword(text)}\n                    value={password}\n                />\n            </TouchableOpacity>\n\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Confirm Password\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={text => setConfirmPassword(text)}\n                    value={cf_password}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.loginBtn} onPress={handleRegister}>\n                <Text style={styles.loginText}>REGISTER</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\n\n\nexport default RegisterScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAEnD,OAAOC,MAAM;AAKb,OAAO,KAAKC,MAAM,MAAM,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtC,IAAMC,EAAE,GAAGL,MAAM,CAACM,YAAY,CAAC,cAAc,CAAC;AAE9CZ,SAAS,CAAC,YAAM;EACZW,EAAE,CAACE,WAAW,CAAC,UAAAC,EAAE,EAAI;IACjBA,EAAE,CAACC,UAAU,CACT,wGAAwG,EACxG,EAAE,CACL;EACL,CAAC,CAAC;AACN,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;AAER,IAAMK,cAAqC,GAAG,SAAxCA,cAAqCA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAAA,IAAAC,SAAA,GACvBpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACIzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACN7B,QAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3BE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAAA,IAAAG,UAAA,GAEwBjC,QAAQ,CAAC,EAAE,CAAC;IAAAkC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/CE,WAAW,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAEtC,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAEzBzB,EAAE,CAACE,WAAW,CAAC,UAAAC,EAAE,EAAI;MACjBA,EAAE,CAACC,UAAU,CACT,yCAAyC,EACzC,CAAC,KAAK,CAAC,EACP,UAACsB,CAAC,EAAEC,MAAM,EAAK;QACX,IAAIA,MAAM,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACxBC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACvD,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;QAC1D;MACJ,CAAC,CACJ;IACL,CAAC,CAAC;EACN,CAAC;EAED,OACIhC,KAAA,CAACT,IAAI;IAAC0C,KAAK,EAAEtC,MAAM,CAACuC,eAAgB;IAAAC,QAAA,GAChCrC,IAAA,CAACN,IAAI;MAACyC,KAAK,EAAEtC,MAAM,CAACyC,IAAK;MAAAD,QAAA,EAAC;IAAQ,EAAO,EACzCrC,IAAA,CAACN,IAAI;MAACyC,KAAK,EAAEtC,MAAM,CAAC0C,QAAS;MAAAF,QAAA,EAAEf;IAAG,EAAQ,EAE1CtB,IAAA,CAACJ,gBAAgB;MAACuC,KAAK,EAAEtC,MAAM,CAAC2C,SAAU;MAAAH,QAAA,EACtCrC,IAAA,CAACL,SAAS;QACNwC,KAAK,EAAEtC,MAAM,CAAC4C,SAAU;QACxBC,WAAW,EAAC,UAAU;QACtBC,oBAAoB,EAAC,SAAS;QAC9BC,YAAY,EAAE,SAAAA,aAAAC,IAAI;UAAA,OAAI9B,WAAW,CAAC8B,IAAI,CAAC;QAAA,CAAC;QACxCC,KAAK,EAAEhC;MAAS;IAClB,EACa,EAEnBd,IAAA,CAACJ,gBAAgB;MAACuC,KAAK,EAAEtC,MAAM,CAAC2C,SAAU;MAAAH,QAAA,EACtCrC,IAAA,CAACL,SAAS;QACNwC,KAAK,EAAEtC,MAAM,CAAC4C,SAAU;QACxBC,WAAW,EAAC,UAAU;QACtBC,oBAAoB,EAAC,SAAS;QAC9BI,eAAe,EAAE,IAAK;QACtBH,YAAY,EAAE,SAAAA,aAAAC,IAAI;UAAA,OAAI1B,WAAW,CAAC0B,IAAI,CAAC;QAAA,CAAC;QACxCC,KAAK,EAAE5B;MAAS;IAClB,EACa,EAEnBlB,IAAA,CAACJ,gBAAgB;MAACuC,KAAK,EAAEtC,MAAM,CAAC2C,SAAU;MAAAH,QAAA,EACtCrC,IAAA,CAACL,SAAS;QACNwC,KAAK,EAAEtC,MAAM,CAAC4C,SAAU;QACxBC,WAAW,EAAC,kBAAkB;QAC9BC,oBAAoB,EAAC,SAAS;QAC9BC,YAAY,EAAE,SAAAA,aAAAC,IAAI;UAAA,OAAIlB,kBAAkB,CAACkB,IAAI,CAAC;QAAA,CAAC;QAC/CC,KAAK,EAAEpB;MAAY;IACrB,EACa,EACnB1B,IAAA,CAACJ,gBAAgB;MAACuC,KAAK,EAAEtC,MAAM,CAACmD,QAAS;MAACC,OAAO,EAAErB,cAAe;MAAAS,QAAA,EAC9DrC,IAAA,CAACN,IAAI;QAACyC,KAAK,EAAEtC,MAAM,CAACqD,SAAU;QAAAb,QAAA,EAAC;MAAQ;IAAO,EAC/B;EAAA,EAChB;AAEf,CAAC;AAID,eAAe7B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}