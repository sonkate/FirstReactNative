{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../../elements/style\";\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('smarthome.db');\ndb.transaction(function (tx) {\n  tx.executeSql('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, email TEXT);', [], function (_, result) {\n    console.log('Bảng đã được tạo.');\n  });\n});\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    cf_password = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var handleLogin = function handleLogin() {};\n  return _jsxs(View, {\n    style: styles.container_login,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Register\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Username\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setUsername(text);\n        },\n        value: username\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Confirm Password\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        },\n        value: cf_password\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"REGISTER\"\n      })\n    })]\n  });\n};\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","styles","SQLite","jsx","_jsx","jsxs","_jsxs","db","openDatabase","transaction","tx","executeSql","_","result","console","log","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","cf_password","setConfirmPassword","handleLogin","style","container_login","children","logo","inputView","inputText","placeholder","placeholderTextColor","onChangeText","text","value","secureTextEntry","loginBtn","onPress","loginText"],"sources":["/home/son/Downloads/Mobile app/FirstReactNative/src/screens/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport styles from '../../elements/style';\ninterface ILoginProps {\n    navigation: any;\n}\nimport * as SQLite from 'expo-sqlite';\n\nconst db = SQLite.openDatabase('smarthome.db');\n\ndb.transaction(tx => {\n    tx.executeSql(\n        'CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, email TEXT);',\n        [],\n        (_, result) => {\n            console.log('Bảng đã được tạo.');\n        },\n\n    );\n});\n\nconst RegisterScreen: React.FC<ILoginProps> = ({ navigation }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [cf_password, setConfirmPassword] = useState('');\n\n    const handleLogin = () => {\n        // Handle login logic here\n    };\n\n    return (\n        <View style={styles.container_login}>\n            <Text style={styles.logo}>Register</Text>\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Username\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={text => setUsername(text)}\n                    value={username}\n                />\n            </TouchableOpacity>\n\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Password\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={text => setPassword(text)}\n                    value={password}\n                />\n            </TouchableOpacity>\n\n            <TouchableOpacity style={styles.inputView}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Confirm Password\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={text => setConfirmPassword(text)}\n                    value={cf_password}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.loginBtn} onPress={handleLogin}>\n                <Text style={styles.loginText}>REGISTER</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\n\n\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}