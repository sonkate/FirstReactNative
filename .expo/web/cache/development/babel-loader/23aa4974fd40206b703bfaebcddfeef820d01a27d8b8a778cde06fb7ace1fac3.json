{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from \"react-native-elements\";\nimport styles from \"../../elements/style\";\nimport { set_value } from \"./SettingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AIO_KEY = 'aio_Mptp698oV7uAYedDlpA2p4wlew7n';\nvar AIO_USERNAME = 'HarryHaha';\nvar FEED_ID_1 = 'auto1';\nvar FEED_ID_2 = 'auto2';\nvar FEED_ID_3 = 'auto3';\nvar url_auto_1 = \"https://io.adafruit.com/api/v2/\" + AIO_USERNAME + \"/feeds/\" + FEED_ID_1 + \"/data\";\nvar url_auto_2 = \"https://io.adafruit.com/api/v2/\" + AIO_USERNAME + \"/feeds/\" + FEED_ID_2 + \"/data\";\nvar url_auto_3 = \"https://io.adafruit.com/api/v2/\" + AIO_USERNAME + \"/feeds/\" + FEED_ID_3 + \"/data\";\nvar newBackgroundColor1 = '#DCDCDC';\nvar newBackgroundColor2 = '#DCDCDC';\nvar newBackgroundColor3 = '#DCDCDC';\nvar AutoScreen = function AutoScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEnabled1 = _useState2[0],\n    setIsEnabled1 = _useState2[1];\n  var toggleSwitch1 = function toggleSwitch1() {\n    set_value(\"\" + (!isEnabled1 ? \"1\" : \"0\"), url_auto_1);\n    if (isEnabled1) {\n      newBackgroundColor1 = '#DCDCDC';\n      setIsEnabled1(false);\n    } else {\n      newBackgroundColor1 = '#00DD00';\n      setIsEnabled1(true);\n    }\n  };\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEnabled2 = _useState4[0],\n    setIsEnabled2 = _useState4[1];\n  var toggleSwitch2 = function toggleSwitch2() {\n    set_value(\"\" + (!isEnabled2 ? \"1\" : \"0\"), url_auto_2);\n    if (isEnabled2) {\n      newBackgroundColor2 = '#DCDCDC';\n      setIsEnabled2(false);\n    } else {\n      newBackgroundColor2 = '#00DD00';\n      setIsEnabled2(true);\n    }\n  };\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEnabled3 = _useState6[0],\n    setIsEnabled3 = _useState6[1];\n  var toggleSwitch3 = function toggleSwitch3() {\n    set_value(\"\" + (!isEnabled3 ? \"1\" : \"0\"), url_auto_3);\n    if (isEnabled3) {\n      newBackgroundColor3 = '#DCDCDC';\n      setIsEnabled3(false);\n    } else {\n      newBackgroundColor3 = '#00DD00';\n      setIsEnabled3(true);\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Header, {\n      backgroundColor: \"rgb(253,201,0)\",\n      backgroundImageStyle: {},\n      barStyle: \"default\",\n      centerComponent: {\n        text: \"Auto\",\n        style: {\n          color: \"#fff\",\n          fontSize: 20,\n          paddingBottom: 5\n        }\n      },\n      centerContainerStyle: {},\n      leftContainerStyle: {},\n      placement: \"center\",\n      rightContainerStyle: {},\n      statusBarProps: {\n        hidden: true\n      }\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Recommends\"\n      }), _jsx(TouchableOpacity, {\n        style: [styles.buttonStyle, {\n          backgroundColor: newBackgroundColor1\n        }],\n        onPress: function onPress() {\n          return toggleSwitch1();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Turn on the light when it's dark\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.buttonStyle, {\n          backgroundColor: newBackgroundColor2\n        }],\n        onPress: function onPress() {\n          return toggleSwitch2();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Turn on the fan when the temperature is over 20 degree\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.buttonStyle, {\n          backgroundColor: newBackgroundColor3\n        }],\n        onPress: function onPress() {\n          return toggleSwitch3();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Turn on the light when there are peole in the room\"\n        })\n      })]\n    })]\n  });\n};\nexport default AutoScreen;","map":{"version":3,"names":["React","useState","Text","View","TouchableOpacity","Header","styles","set_value","jsx","_jsx","jsxs","_jsxs","AIO_KEY","AIO_USERNAME","FEED_ID_1","FEED_ID_2","FEED_ID_3","url_auto_1","url_auto_2","url_auto_3","newBackgroundColor1","newBackgroundColor2","newBackgroundColor3","AutoScreen","_useState","_useState2","_slicedToArray","isEnabled1","setIsEnabled1","toggleSwitch1","_useState3","_useState4","isEnabled2","setIsEnabled2","toggleSwitch2","_useState5","_useState6","isEnabled3","setIsEnabled3","toggleSwitch3","children","backgroundColor","backgroundImageStyle","barStyle","centerComponent","text","style","color","fontSize","paddingBottom","centerContainerStyle","leftContainerStyle","placement","rightContainerStyle","statusBarProps","hidden","container","title","buttonStyle","onPress"],"sources":["/home/son/Downloads/Mobile app/FirstReactNative/src/screens/AutoScreen.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, View, Alert, TouchableOpacity } from 'react-native'\nimport { Button, Header } from \"react-native-elements\";\nimport styles from '../../elements/style';\nimport { set_value } from './SettingScreen';\nimport { transformAsync } from '@babel/core';\n\n\nconst AIO_KEY = 'aio_Mptp698oV7uAYedDlpA2p4wlew7n';\nconst AIO_USERNAME = 'HarryHaha';\n\nconst FEED_ID_1 = 'auto1';\nconst FEED_ID_2 = 'auto2';\nconst FEED_ID_3 = 'auto3';\n\nconst url_auto_1 = `https://io.adafruit.com/api/v2/${AIO_USERNAME}/feeds/${FEED_ID_1}/data`;\nconst url_auto_2 = `https://io.adafruit.com/api/v2/${AIO_USERNAME}/feeds/${FEED_ID_2}/data`;\nconst url_auto_3 = `https://io.adafruit.com/api/v2/${AIO_USERNAME}/feeds/${FEED_ID_3}/data`;\n\n\nlet newBackgroundColor1 = '#DCDCDC';\nlet newBackgroundColor2 = '#DCDCDC';\nlet newBackgroundColor3 = '#DCDCDC';\nconst AutoScreen: React.FC = () => {\n    const [isEnabled1, setIsEnabled1] = useState(false);\n    const toggleSwitch1 = () => {\n        set_value(`${!isEnabled1 ? \"1\" : \"0\"}`, url_auto_1)\n        if (isEnabled1) {\n            newBackgroundColor1 = '#DCDCDC';\n            setIsEnabled1(false);\n        } else {\n            newBackgroundColor1 = '#00DD00';\n            setIsEnabled1(true);\n        }\n    }\n\n    const [isEnabled2, setIsEnabled2] = useState(false);\n    const toggleSwitch2 = () => {\n        set_value(`${!isEnabled2 ? \"1\" : \"0\"}`, url_auto_2)\n        if (isEnabled2) {\n            newBackgroundColor2 = '#DCDCDC';\n            setIsEnabled2(false);\n        } else {\n            newBackgroundColor2 = '#00DD00';\n            setIsEnabled2(true);\n        }\n    }\n\n    const [isEnabled3, setIsEnabled3] = useState(false);\n    const toggleSwitch3 = () => {\n        set_value(`${!isEnabled3 ? \"1\" : \"0\"}`, url_auto_3)\n        if (isEnabled3) {\n            newBackgroundColor3 = '#DCDCDC';\n            setIsEnabled3(false);\n        } else {\n            newBackgroundColor3 = '#00DD00';\n            setIsEnabled3(true);\n        }\n    }\n\n    return (\n        <View>\n            <Header\n                backgroundColor=\"rgb(253,201,0)\"\n                backgroundImageStyle={{}}\n                barStyle=\"default\"\n                centerComponent={{\n                    text: \"Auto\",\n                    style: { color: \"#fff\", fontSize: 20, paddingBottom: 5 }\n                }}\n                centerContainerStyle={{}}\n                // leftComponent={{ icon: \"menu\", color: \"#fff\" }}\n                leftContainerStyle={{}}\n                placement=\"center\"\n                // rightComponent={{ icon: \"home\", color: \"#fff\" }}\n                rightContainerStyle={{}}\n                statusBarProps={{ hidden: true }}\n            />\n            <View style={styles.container}>\n                <Text style={styles.title}>Recommends</Text>\n\n                <TouchableOpacity style={[styles.buttonStyle, { backgroundColor: newBackgroundColor1 }]} onPress={() => toggleSwitch1()}>\n                    <Text style={styles.text}>Turn on the light when it's dark</Text>\n                </TouchableOpacity>\n\n\n                <TouchableOpacity style={[styles.buttonStyle, { backgroundColor: newBackgroundColor2 }]} onPress={() => toggleSwitch2()}>\n                    <Text style={styles.text}>Turn on the fan when the temperature is over 20 degree</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={[styles.buttonStyle, { backgroundColor: newBackgroundColor3 }]} onPress={() => toggleSwitch3()}>\n                    <Text style={styles.text}>Turn on the light when there are peole in the room</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\n\nexport default AutoScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}